package code{	 	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.KeyboardEvent;	import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.ui.Keyboard;		public class GameController extends MovieClip	{				var pause:Boolean = true;		var gameStarted:Boolean = false;				var rfidController:RFIDController = null;		var graphicsController:GraphicsController = null;						var player1:Player;		// Player Left		var player2:Player;		// Player Right						public function GameController()		{			graphicsController = new GraphicsController(this);			rfidController = new RFIDController(this);			// ScoreBoard defined as symbols in flash...			player1 = new Player("Player1", scoreboard1);			player2 = new Player("Player2", scoreboard2);			// Update screen every frame			addEventListener(Event.ENTER_FRAME,enterFrameHandler);						//addEventListener(MouseEvent.MOUSE_DOWN, clickHandler);			addEventListener(KeyboardEvent.KEY_DOWN, keyHandler);						pauseGame();		}				function clickHandler(event:MouseEvent):void {			if(event.shiftKey) {				graphicsController.renderAttack(1, 0);				graphicsController.renderHealth(0,0);			} else {				graphicsController.renderAttack(1, 1);				graphicsController.renderHealth(0,1);			}		}						function keyHandler(event:KeyboardEvent) :void {			if(String.fromCharCode(event.charCode) == ' ') {				resumeGame();				if(!gameStarted) {					gameStarted = true;					resetGame();					startGame();				}			}		}										public function newCard(reader:int, card:int):void		{						if(pause) return						var p:Player = null;			if(reader == 1)			{				p = player1;			}			else			if(reader == 2)			{				p = player2;			}			else			{				trace("Error - unknown reader used...");				return;			}			p.cards_used++;			p.incrementCurrent(card);			if(p.isHit()) {								graphicsController.renderAttack(1,reader - 1);				p.updateDistance();				p.setTarget();				p.resetCards();				trace(p.name +  " hit!");							} else if (p.isBust()) {				p.setTarget();				p.resetCards();							trace(p.name +  " bust!");						}			if(p.isWin()) {				trace(p.name +  " wins...");				gameStarted = false;			}		}				private function pauseGame():void {			pause = true;			pauseText.visible = true;			pauseBlur.visible = true;		}				private function resumeGame():void {			pause = false;			pauseText.visible = false;			pauseBlur.visible = false;		}		private function resetGame():void {			player1.reset();			player2.reset();		}						private function startGame():void {			pause = false;			player1.setCurrent(Utils.random());			player1.setTarget();						player2.setCurrent(Utils.random());			player2.setTarget();		}		private function enterFrameHandler(event:Event):void		{					}						}}