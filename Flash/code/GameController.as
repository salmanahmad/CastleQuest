package code{	 	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.KeyboardEvent;	import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.ui.Keyboard;		public class GameController extends MovieClip	{				var pause:Boolean = true;		var gameStarted:Boolean = false;				var rfidController:RFIDController = null;		var graphicsController:GraphicsController = null;						var player0:Player;		// Player Left		var player1:Player;		// Player Right				var winningPlayer = 0;		var winningAnimation = null;		var destroyedCastle = null;				public function GameController()		{			graphicsController = new GraphicsController(this);			rfidController = new RFIDController(this);			// ScoreBoard defined as symbols in flash...			player0 = new Player("Player1", scoreboard0);			player1 = new Player("Player2", scoreboard1);			// Update screen every frame			addEventListener(Event.ENTER_FRAME,enterFrameHandler);						addEventListener(KeyboardEvent.KEY_DOWN, keyHandler);						pauseGame();		}								function keyHandler(event:KeyboardEvent) :void {			if(String.fromCharCode(event.charCode) == ' ') {				if(this.pause) {					resumeGame();				} else {					pauseGame();				}				if(!gameStarted) {					gameStarted = true;					resetGame();					startGame();				}								}		}										public function newCard(reader:int, card:int):void		{						if(pause) return						var p:Player = null;			if(reader == 0)			{				p = player0;			}			else			if(reader == 1)			{				p = player1;			}			else			{				trace("Error - unknown reader used...");				return;			}			p.cards_used++;			p.incrementCurrent(card);			if(p.isHit()) {				p.updateDistance();				p.setTarget();				p.resetCards();				trace(p.name +  " hit!");				var health:Number;				graphicsController.renderHealth((Utils.END - p.distance) / Utils.END, 1 - reader);				graphicsController.renderAttack(1,reader);				graphicsController.renderHit(reader);			} else if (p.isBust()) {				p.setTarget();				p.resetCards();								graphicsController.renderBust(reader);								trace(p.name +  " bust!");						}			if(p.isWin()) {				trace(p.name +  " wins...");				gameStarted = false;								winningPlayer = reader;				winningAnimation = graphicsController.attackQueue[graphicsController.attackQueue.length - 1];			}		}				private function pauseGame():void {			pause = true;			pauseText.visible = true;			pauseBlur.visible = true;		}				private function resumeGame():void {			pause = false;			pauseText.visible = false;			pauseBlur.visible = false;		}		private function resetGame():void {			graphicsController.reset();			player0.reset();			player1.reset();		}						private function startGame():void {			pause = false;			player0.setCurrent(Utils.random());			player0.setTarget();						player1.setCurrent(Utils.random());			player1.setTarget();		}		private function enterFrameHandler(event:Event):void		{						if(winningAnimation && winningAnimation.currentFrame == winningAnimation.totalFrames) {				graphicsController.renderHealth(0, 1-winningPlayer);				winningAnimation = null;				if(winningPlayer == 0) {					destroyedCastle = castle1;				} else if(winningPlayer == 1) {					destroyedCastle = castle0;				}			}						if(destroyedCastle && destroyedCastle.currentFrame == destroyedCastle.totalFrames) {				pauseGame();				destroyedCastle = null;							}		}						}}