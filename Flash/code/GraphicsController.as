package code {	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.KeyboardEvent;	import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.ui.Keyboard;	class GraphicsController extends MovieClip {				var gameController:GameController;				var attackQueue:Array;				function GraphicsController(gameController:GameController) {			this.gameController = gameController;			attackQueue = [];									// Update screen every frame			addEventListener(Event.ENTER_FRAME,enterFrameHandler);								}		private function enterFrameHandler(event:Event):void		{						var i:int;									for(i = 0; i < attackQueue.length; i++) {				var animation = attackQueue[i];				if(animation && animation.currentFrame == animation.totalFrames) {					i--;					removeAttack(animation);				}			}					}		private function removeAttack(index:int):void {			if( attackQueue[index] != null)			{				gameController.removeChild(attackQueue[index]);				attackQueue.splice(index, 1);				// delete attackQueue(index);			}		}		// power between 0 and 1		public function renderAttack(power:Number, player:int):void {			var animation  = null;			if(player == 0) {				animation = new CannonLaunch1();				animation.x = 50;				animation.y = 300;				attackQueue.push(animation);				this.gameController.addChild(animation);			} else if(player == 1) {				animation = new CannonLaunch2();				animation.x = 50;				animation.y = 300;				attackQueue.push(animation);				this.gameController.addChild(animation);			}		}				// health between 0 and 1		public function renderHealth(health:Number, player:int):void {				}						public function renderVictory(type:int):void {						var message:String = "";			if(type == 0) {				message = "Player 1 Wins!";			} else if(type == 1) {				message = "Player 2 Wins!";							}						this.alertMessage(message);					}				public function alertMessage(message:String):void {			gameController.alertText.text = message;		}						public function renderProblem(type:int, current:int, target:int, player:int):void {			// Done - Implemented via the ScoreBoard and Player classes		}	}	}